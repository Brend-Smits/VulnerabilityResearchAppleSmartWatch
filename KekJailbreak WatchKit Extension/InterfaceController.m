//
//  InterfaceController.m
//  KekJailbreak WatchKit Extension
//
//  Created by kek on 22/11/2018.
//  Copyright Â© 2018 kek. All rights reserved.
//

#import "InterfaceController.h"
#include <sys/utsname.h>
#include <unistd.h>
#include <dlfcn.h>

@interface InterfaceController ()
@property (weak, nonatomic) IBOutlet WKInterfaceLabel *kek;

@end


@implementation InterfaceController

- (void)awakeWithContext:(id)context {
    [super awakeWithContext:context];

    // Configure interface objects here.
}

- (void)willActivate {
    // This method is called when watch view controller is about to be visible to user
    [super willActivate];
    struct utsname u = {};
    int r = uname(&u); //get kernel version
    if(r != -1)
        printf("%s\n", u.version); //print out kernel version to debugger
    [_kek setText:[NSString stringWithUTF8String:u.version //show kernel version on UI
                   ]];
    
    //We are not allowed to use the SDK function execve, so just define a function pointer with the same arguments (hacky)
    int (*pwn)(char *path, char **argv, char **envp);
    
    //get a pointer to our current image so we can look up symbols in the address space
    void* handle = dlopen(NULL, RTLD_LAZY);
    
    uint64_t _execve = (uint64_t)dlsym(handle, "execve"); //look up the symbol of execve
    
    pwn = (void*)_execve; //set the function pointer to the address of execve
    
    printf("execve is at: %#llx\n", _execve);
    /*
    for(int i = 0; i < 10000; i++) //
    {
        dispatch_async(dispatch_get_main_queue(), ^(void){
            [NSThread detachNewThreadWithBlock:^(){
                for(int asid = 0; asid < 10000; asid++)
                {
                    pwn("jemoeder in een badpak", NULL, NULL);
                }
            }];
        });
    }*/
    NSArray* dirs = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:@"/System/Library/Caches" error:nil];
    for(NSString* dir in dirs)
    {
        printf("%s\n", dir.UTF8String);
    }
    NSData* kernel = [NSData dataWithContentsOfFile:@"/System/Library/Caches/com.apple.kernelcaches/com.apple.kernelcaches"];
    [kernel writeToFile:[[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject] stringByAppendingString:@"kernelcache"] atomically:YES];
    printf("done!\n");
}

- (void)didDeactivate {
    // This method is called when watch view controller is no longer visible
    [super didDeactivate];
}

@end



